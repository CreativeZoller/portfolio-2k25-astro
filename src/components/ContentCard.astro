---
export interface Props {
    title: string;
    description: string;
    image: string;
    url: string;
    tags?: string[];
    variant?: "normal" | "wide" | "small";
    author?: string;
    date?: string;
    contentType?: "blog" | "podcast";
}
const blogIcon = await import('../../public/blogcard-link-icon.svg?raw');
const podcastIcon = await import('../../public/blogcard-headphone-icon.svg?raw');
const {
    title,
    description,
    image,
    url,
    tags = [],
    variant = "normal",
    author,
    date,
    contentType = "blog"
} = Astro.props;
const formattedDate = date ? new Date(date).toLocaleDateString() : "";
const iconSvg = contentType === "podcast" ? podcastIcon.default : blogIcon.default;
const helperText = contentType === "podcast" ? "Listen to this episode" : "Read this post";
---

<div class={`card-container h-full flex flex-col bg-white rounded-xl shadow-md hover:shadow-lg transition overflow-hidden card-container--${variant} hover:cursor-pointer`}>
    <a href={url} class="card-img-link" tabindex="-1">
        <img src={image} alt={title} class="card-img" loading="lazy" />
    </a>
    <div class="card-content flex flex-col flex-1">
        {(author || formattedDate) && (
            <div class="text-dark">
                {author && <span class="text-accent-2 hover:underline">{author}</span>}
                {author && formattedDate && <span class="card-dot opacity-80">â€¢</span>}
                {formattedDate && <span class="card-date opacity-80">{formattedDate}</span>}
            </div>
        )}
        <a href={url} class="card-title-link group block text-accent-1 no-underline cursor-pointer" title={title}>
            <hgroup class="text-lg font-semibold mb-2 flex items-baseline justify-between">
                <h3 class="card-title transition-colors duration-300 ease-in-out text-accent-1">{title}</h3>
                <span class="card-icon text-accent-1 origin-center hover:text-accent-2" aria-hidden="true">
                    <Fragment set:html={iconSvg} />
                </span>
            </hgroup>
        </a>
        <p class="text-accent-1 text-sm mb-3 flex-grow">{description}</p>
        {tags.length > 0 && (
            <ul class="card-tags">
                {tags.map(tag => (
                    <li class="card-tag">
                        <a href={`/tags/${encodeURIComponent(tag)}/`} class="card-tag-link inline-block rounded-full px-2 py-1 text-sm font-semibold text-indigo-800 hover:text-light bg-light hover:bg-indigo-800" onclick="event.stopPropagation();">{tag}</a>
                    </li>
                ))}
            </ul>
        )}
    </div>
</div>

<style>
.card-container {
    display: flex;
    flex-direction: column;
    height: 100%;
}

.card-img-link {
    width: 100%;
    aspect-ratio: 16/9;
    flex-shrink: 0;
    overflow: hidden;
    display: block;
}

.card-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    transition: transform 0.3s ease-in-out;
}
.card-container:hover .card-img,
.card-container:focus .card-img {
    transform: scale(1.05);
}

.card-content {
    flex: 1 1 0%;
    display: flex;
    flex-direction: column;
    padding: 1.5rem 1.5rem 1.2rem 1.5rem;
}

.card-container--wide {
    flex-direction: column;
}

.card-container--small {
    flex-direction: column;
}
@media (min-width: 1280px) {
    .card-container--small {
        flex-direction: row;
        align-items: stretch;
    }
    .card-container--small .card-img-link {
        width: 235px;
        min-width: 235px;
        max-width: 235px;
        aspect-ratio: 1/1;
        height: 100%;
        margin-right: 1.25rem;
        flex-shrink: 0;
        display: block;
    }
    .card-container--small .card-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
    }
    .card-container--small .card-content {
        flex: 1 1 0%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 1rem 1.5rem 1rem 0;
    }
}
.card-content {
    padding: 1.5rem 1.5rem 1.2rem 1.5rem;
    display: flex;
    flex-direction: column;
    flex: 1;
}

.card-container--small .card-content {
    padding: 1.5rem 1.5rem 1.2rem 1.5rem;
    justify-content: flex-start;
}
@media (min-width: 1280px) {
    .card-container--small .card-content {
        padding: 1rem 1rem 0.8rem 0;
        justify-content: center;
    }
}

.card-dot {
    margin: 0 0.3em;
}
.card-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
    transition: color 0.2s;
}
.card-icon {
    flex-shrink: 0;
    width: 28px;
    height: 24px;
    margin-left: .75rem;
    margin-top: -.5rem;
    transform: rotate(0deg);
    transition: transform 0.3s ease-in-out;
}
.card-img-link {
    overflow: hidden;
}
.card-container:hover .card-title {
    color: var(--accent-2);
}
.card-container:hover .card-icon,
.card-container:focus .card-icon {
    transform: rotate(45deg);
}
.card-container:hover img {
    transform: scale(1.05);
}
.card-tags {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
}
.card-tag {
    margin: 0;
}
.card-tag-link {
    display: inline-block;
    border-radius: 999px;
    padding: 0.25em 0.9em;
    font-size: 0.92em;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s, color 0.2s;
}
</style>